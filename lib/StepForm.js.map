{"version":3,"sources":["../src/StepForm.js"],"names":[],"mappings":"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","file":"StepForm.js","sourcesContent":["'use strict';\n\nimport React                   from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class FlowForm extends React.Component {\n\n  static defaultProps = {\n    currentPage:    0,\n    children:       [],\n    transitionName: \"step\",\n    transitionTiming: [500, 300]\n  }\n\n  static propTypes = {\n    currentPage:    React.PropTypes.number,\n    transitionName: React.PropTypes.string,\n    transitionTiming: React.PropTypes.array,\n    pageOrder:      React.PropTypes.array,\n    onPageChange:   React.PropTypes.func,\n    onFinish:       React.PropTypes.func,\n    children:       React.PropTypes.any,\n    className:      React.PropTypes.string\n  }\n\n\n  // we need to give children access to these props so\n  // the form pages can modify the page if necessary\n  static childContextTypes = {\n    nextPage:     React.PropTypes.func,\n    previousPage: React.PropTypes.func,\n    setPage:      React.PropTypes.func\n  }\n\n  getChildContext() {\n    return { \n      nextPage:     this.nextPage.bind(this),\n      previousPage: this.previousPage.bind(this),\n      setPage:      this.setPage.bind(this)\n    };\n  }\n\n\n  // All state needs to track is current page\n  constructor(props) {\n    super(props);\n\n    let pagesDisabled = Array(props.children.length).fill(null).map((val, i) => {\n      return i > props.currentPage;\n    });\n\n    this.state = {\n      currentPage: this._checkCurrentPage(props.currentPage || 0),\n      pagesDisabled: pagesDisabled,\n      formIdentifier: Math.random() // incase we have multiple forms, we need to be able to reference them effectively\n    };\n  }\n\n\n  // if currentPage is updated externally, update it here too.\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentPage: this._checkCurrentPage(nextProps.currentPage || 0)\n    });\n  }\n\n\n  // for external access if necessary\n  getPage() {\n    return this.state.currentPage;\n  }\n\n\n  // go to next page (available on context)\n  nextPage() {\n    let page = this.state.currentPage + 1;\n\n    if (page > this.props.children.length) {\n      if (this.props.onFinish) this.props.onFinish();\n      return;\n    }\n    \n    this._changePage(page);\n  }\n\n\n  // go to previous page (available on context)\n  previousPage() {\n    let page = this.state.currentPage - 1;\n\n    if (page < 0) return;\n\n    this._changePage(page);\n  }\n\n\n  // go to specific page (available on context)\n  setPage(page) {\n    const { currentPage } = this.state;\n\n    page = this._checkCurrentPage(page);\n    if (page == currentPage) return;\n\n    this._changePage(page);\n  }\n\n\n  // private page change function\n  _changePage(page) {\n    page = this._checkCurrentPage(page)\n    let pagesDisabled       = this.state.pagesDisabled;\n        pagesDisabled[page] = false; // enable form control link to page\n\n    this.setState({\n      pagesDisabled:  pagesDisabled,\n      currentPage:    page\n    }, () => {\n      if (this.props.onPageChange) this.props.onPageChange();\n    });\n  }\n\n  // basic checking of current page to make sure its not\n  // greater than the number of pages or below 0\n  _checkCurrentPage(page) {\n    if (!this.props.children) return 0;\n    if (page >= this.props.children.length) return this.props.children.length - 1;\n    if (page < 0) return 0;\n    return page;\n  }\n\n\n  render() {\n\n    const { children, pageOrder, pageTitles, \n            transitionName, transitionTiming, className } = this.props;\n    const { currentPage, formIdentifier, pagesDisabled }  = this.state;\n\n    // get actual page number according to pageOrder\n    const pageNumber  = (pageOrder && pageOrder[currentPage] != undefined) ? pageOrder[currentPage] : currentPage;\n\n    // this will give the child access to the flowforms context\n    let displayPage = null;\n    if (children.length) {\n      displayPage = React.cloneElement(children[pageNumber], {\n        context: this.state.context,\n        key: pageNumber\n      });\n    }\n\n    return (\n      <div className={ `FlowForm ${ className }` }>\n        {/* who doesnt love animations? */}\n        <ReactCSSTransitionGroup\n          transitionName={ transitionName }\n          transitionEnterTimeout={ transitionTiming[0] }\n          transitionLeaveTimeout={ transitionTiming[1] }\n        >\n          { displayPage }\n        </ReactCSSTransitionGroup>\n\n        <div className=\"FlowControl\">\n          { Array(children.length).fill(null).map((val, i) => {\n            return (\n              <div className=\"FlowControl--button\" key={ `${ formIdentifier }-${ i }` }>\n                <input \n                  id={ `FlowControl-${ formIdentifier }-${ i }` }\n                  name={ formIdentifier }\n                  type=\"radio\"\n                  checked={ i == currentPage }\n                  onChange={ this._changePage.bind(this, i) }\n                  disabled={ pagesDisabled[i] }\n                />\n                <label \n                  htmlFor={ `FlowControl-${ formIdentifier }-${ i }` }\n                  className={ `FlowControl--button--${ (i == currentPage) ? 'active' : '' }${ pagesDisabled[i] ? 'disabled' : '' }` }\n                >\n                  <div className=\"FlowControl--button-icon\"></div>\n                  <span className=\"FlowControl--button-title\">{ (pageTitles && pageTitles[i]) }</span>\n                </label>\n              </div>\n            )\n          }) }\n        </div>\n      </div>\n    );\n  }\n}\n"]}